name: fndr backend

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the development branch
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        python-version: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      # Sets up Python
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    # Install Python/Flask dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    # - name: Code analysis with pylint
    #   run: |
    #     pylint $(git ls-files '*.py') --load-plugins pylint_flask_sqlalchemy
      
    - name: Test with pytest
      run: |
        python -m pytest -v
      env:
          TEST_POSTGRES_URL: ${{ secrets.TEST_POSTGRES_URL }}
          TEST_POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
          TEST_POSTGRES_USER: ${{ secrets.TEST_POSTGRES_USER }}
          TEST_POSTGRES_PW: ${{ secrets.TEST_POSTGRES_PW }}
          CACHE_TYPE: ${{ secrets.CACHE_TYPE }}
          FLASK_APP: ${{ secrets.FLASK_APP }}
          FLASK_ENV: ${{ secrets.FLASK_ENV }}
          APP_SETTINGS: ${{ secrets.APP_SETTINGS }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          CACHE_DEFAULT_TIMEOUT: ${{ secrets.CACHE_DEFAULT_TIMEOUT }}
          

